#!/bin/bash

### BEGIN INIT INFO
# Provides:          globaleaks
# Required-Start:    $local_fs $remote_fs $network $named $time tor
# Required-Stop:     $local_fs $remote_fs $network $named $time
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start the GlobaLeaks server.
# Description:       Start The GlobaLeaks server, an opensource, anonymous,
#                    censorship-resistant whistleblowing platform.
### END INIT INFO

# Author: Giovanni Pellerano <evilaliv3@globaleaks.org>

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
NAME=$(basename $(readlink -nf $0))

DAEMON=/usr/bin/globaleaks
SCRIPTNAME=$0
WAITFORDAEMON=60

##################################################################
# GLobaLeaks configuration is read with the following order:
# 1) /usr/share/globaleaks/default
# 2) web configuration
# 3) /etc/default/globaleaks

# The /etc/default/globaleaks is the place where one can force
# settings that could not be overridden from the configuration
# that can be issued from the web interface
if test -e "/usr/share/globaleaks/default" ; then
    . "/usr/share/globaleaks/default"
fi

if [[ ! -f /var/globaleaks/globaleaks.db ]]; then
    # FIRST SETUP
    NETWORK_SANDBOXING=0
elif [[ "$(gl-admin getvar reachable_via_web 2>1&)" != "True" ]]; then
    NETWORK_SANDBOXING=1
else
    NETWORK_SANDBOXING=0
fi

if test -e "/etc/default/globaleaks" ; then
    . "/etc/default/globaleaks"
fi

##################################################################
. /lib/init/vars.sh

. /lib/lsb/init-functions

test $DEBIAN_SCRIPT_DEBUG && set -v -x

GLPID=/var/run/globaleaks/globaleaks.pid

# Let's try to figure our some sane defaults:
if [ -r /proc/sys/fs/file-max ]; then
    system_max=`cat /proc/sys/fs/file-max`
    if [ "$system_max" -gt "80000" ] ; then
        MAX_FILEDESCRIPTORS=32768
    elif [ "$system_max" -gt "40000" ] ; then
        MAX_FILEDESCRIPTORS=16384
    elif [ "$system_max" -gt "10000" ] ; then
        MAX_FILEDESCRIPTORS=8192
    else
        MAX_FILEDESCRIPTORS=1024
        cat << EOF

Warning: Your system has very few filedescriptors available in total.

Maybe you should try raising that by adding 'fs.file-max=100000' to your
/etc/sysctl.conf file.  Feel free to pick any number that you deem appropriate.
Then run 'sysctl -p'.  See /proc/sys/fs/file-max for the current value, and
file-nr in the same directory for how many of those are used at the moment.

EOF
        fi
else
        MAX_FILEDESCRIPTORS=8192
fi

wait_for_deaddaemon () {
    pid=$1
    sleep 1
    if test -n "$pid"
    then
        if kill -0 $pid 2>/dev/null
        then
            cnt=0
            while kill -0 $pid 2>/dev/null
            do
                cnt=`expr $cnt + 1`
                if [ $cnt -gt $WAITFORDAEMON ]
                then
                    log_action_end_msg 1 "still running"
                    exit 1
                fi
                sleep 1
                [ "`expr $cnt % 3`" != 2 ] || log_action_cont_msg ""
            done
        fi
    fi
    log_action_end_msg 0
}

check_iptables()
{
    if ! which iptables >/dev/null 2>&1 ; then
        echo "GlobaLeaks Network Sandboxing Failure: requires iptables"
        return 1
    fi

    iptables -nvL -t nat >/dev/null 2>&1
    if [ "$?" -ne "0" ]; then
        echo "GlobaLeaks Network Sandboxing Failure: missing iptables nat support"
        return 1
    fi

    iptables -nvL -t filter >/dev/null 2>&1
    if [ "$?" -ne "0" ]; then
        echo "GlobaLeaks Network Sandboxing Failure: missing iptables filter support"
        return 1
    fi

    iptables -m owner -h >/dev/null 2>&1
    if [ "$?" -ne "0" ]; then
        echo "GlobaLeaks Network Sandboxing Failure: missing iptables owner support"
        return 1
    fi

    return 0
}

network_sandboxing_start()
{
    iptables -m comment --comment "globaleaks" -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8082
    iptables -m comment --comment "globaleaks" -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 8443
    ip6tables -m comment --comment "globaleaks" -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8082
    ip6tables -m comment --comment "globaleaks" -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 8443

    if [[ "$NETWORK_SANDBOXING" -eq "1" ]]; then
        iptables -L | grep "globaleaks" >/dev/null 2>&1
        if [ "$?" -eq "0" ]; then
            log_action_end_msg 0 "already enabled."
            return
        fi

	log_action_begin_msg "Enabling Globaleaks Network_Sandboxing"

        # INBOUND LOCAL
        declare -a PORTS=("8082" "8083")
        for PORT in "${PORTS[@]}"; do
            iptables -m comment --comment "globaleaks" -A INPUT -p tcp -d 127.0.0.1 --dport $PORT -s 127.0.0.1 -j ACCEPT
            iptables -m comment --comment "globaleaks" -A INPUT -p tcp -d 0.0.0.0/0 --dport $PORT -j DROP
            ip6tables -m comment --comment "globaleaks" -A INPUT -p tcp -d ::1 --dport $PORT -s ::1 -j ACCEPT
            ip6tables -m comment --comment "globaleaks" -A INPUT -p tcp -d :: --dport $PORT -j DROP
        done

        # INBOUND REMOTE
        declare -a PORTS=("80" "443")
        for PORT in "${PORTS[@]}"; do
            iptables -m comment --comment "globaleaks" -A INPUT -p tcp -d 0.0.0.0/0 --dport $PORT -s 127.0.0.1 -j ACCEPT
            iptables -m comment --comment "globaleaks" -A INPUT -p tcp -d 0.0.0.0/0 --dport $PORT -j DROP
            ip6tables -m comment --comment "globaleaks" -A INPUT -p tcp -d :: --dport $PORT -s ::1 -j ACCEPT
            ip6tables -m comment --comment "globaleaks" -A INPUT -p tcp -d :: --dport $PORT -j DROP
        done

        # OUTBOUND
        # All outbound connections from GlobaLeaks goes through Tor except of allowed and enstablished connections.
        iptables -m comment --comment "globaleaks" -A OUTPUT -m state --state RELATED,ESTABLISHED -m owner --uid-owner globaleaks -d 127.0.0.1 -j ACCEPT
        iptables -m comment --comment "globaleaks" -t nat -A OUTPUT ! -o lo -p tcp -m owner --uid-owner ${USERNAME} -m tcp -j REDIRECT --to-ports 9050
        iptables -m comment --comment "globaleaks" -t filter -A OUTPUT -p tcp -m owner --uid-owner ${USERNAME} -m tcp -d 127.0.0.1 --dport 9050 -j ACCEPT
        iptables -m comment --comment "globaleaks" -t filter -A OUTPUT ! -o lo -m owner --uid-owner ${USERNAME} -j LOG --log-prefix "GLOBALEAKS-OUTPUT:DROP: "
        iptables -m comment --comment "globaleaks" -t filter -A OUTPUT ! -o lo -m owner --uid-owner ${USERNAME} -j DROP
        ip6tables -m comment --comment "globaleaks" -A OUTPUT -m state --state RELATED,ESTABLISHED -m owner --uid-owner globaleaks -d ::1 -j ACCEPT
        ip6tables -m comment --comment "globaleaks" -t nat -A OUTPUT ! -o lo -p tcp -m owner --uid-owner ${USERNAME} -m tcp -j REDIRECT --to-ports 9050
        ip6tables -m comment --comment "globaleaks" -t filter -A OUTPUT -p tcp -m owner --uid-owner ${USERNAME} -m tcp -d ::1 --dport 9050 -j ACCEPT
        ip6tables -m comment --comment "globaleaks" -t filter -A OUTPUT ! -o lo -m owner --uid-owner ${USERNAME} -j LOG --log-prefix "GLOBALEAKS-OUTPUT:DROP: "
        ip6tables -m comment --comment "globaleaks" -t filter -A OUTPUT ! -o lo -m owner --uid-owner ${USERNAME} -j DROP

        log_action_end_msg 0
    fi
}

network_sandboxing_stop()
{
    log_action_begin_msg "Disabling GlobaLeaks Network Sandboxing"

    # remove all rules with the comment: "globaleaks-network-sandboxing"
    iptables-save | grep -v "globaleaks" | iptables-restore
    ip6tables-save | grep -v "globaleaks" | ip6tables-restore

    log_action_end_msg 0
}

#
# Function that queries the status of the daemon/service
#
case "$1" in
  start)
    log_daemon_msg "Starting GlobaLeaks daemon" "globaleaks"

    if [ -n "$MAX_FILEDESCRIPTORS" ]; then
        ulimit -n "$MAX_FILEDESCRIPTORS"
    fi

    ARGS="--ip=${LISTENING_IP}
          --working-path=${WORKING_DIR}"

    network_sandboxing_start

    gl-fix-permissions

    log_action_begin_msg "Starting $DESC"

    if start-stop-daemon --stop --quiet --pidfile $GLPID --name globaleaks; then
        log_action_end_msg 0 "already running"
    else
        if [ "${APPARMOR_SANDBOXING}" -eq "1" ] &&
           command -v aa-status > /dev/null &&
           command -v aa-exec > /dev/null &&
           [ -e /etc/apparmor.d/usr.bin/globaleaks ] && \
           aa-status --enabled ; then
            AA_EXEC_PATH=$(command -v aa-exec)
            AA_EXEC="--startas $AA_EXEC_PATH"
            AA_EXEC_ARGS="--profile=user.bin.globaleaks -- $DAEMON"
        else
            AA_EXEC=""
            AA_EXEC_ARGS=""
        fi
        if start-stop-daemon --start --quiet \
            --pidfile $GLPID \
	    --chuid globaleaks \
            $AA_EXEC \
            --exec $DAEMON -- $AA_EXEC_ARGS $ARGS
        then
            log_action_end_msg 0
        else
            log_action_end_msg 1
            exit 1
        fi
    fi
    ;;
  stop)
    log_action_begin_msg "Stopping $DESC"
    pid=`cat $GLPID 2>/dev/null` || true

    if test ! -f $GLPID -o -z "$pid"; then
        log_action_end_msg 0 "not running - there is no $GLPID"
        exit 0
    fi

    if start-stop-daemon --stop --signal TERM --quiet --pidfile $GLPID --name globaleaks; then
        wait_for_deaddaemon $pid
    elif kill -0 $pid 2>/dev/null; then
        log_action_end_msg 1 "Is $pid not $NAME?  Is $DAEMON a different binary now?"
        exit 1
    else
        log_action_end_msg 1 "$DAEMON died: process $pid not running; or permission denied"
        exit 1
    fi
    ;;
  status)
    if test ! -r $(dirname $GLPID); then
        log_failure_msg "cannot read PID file $GLPID"
        exit 4
    fi
    pid=`cat $GLPID 2>/dev/null` || true
    if test ! -f $GLPID -o -z "$pid"; then
        log_failure_msg "$NAME is not running"
        exit 3
    fi
    if ps "$pid" >/dev/null 2>&1; then
        log_success_msg "$NAME is running"
        exit 0
    else
        log_failure_msg "$NAME is not running"
        exit 1
    fi
    ;;
  restart|reload|force-reload)
    $0 stop
    sleep 1
    $0 start
    ;;
  *)
    log_action_msg "Usage: $0 {start|stop|restart|reload|force-reload|status}" >&2
    exit 1
    ;;
esac
